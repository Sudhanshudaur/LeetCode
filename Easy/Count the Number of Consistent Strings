****************************************************************************************************************************************
                                                                    JAVA
class Solution {
    public int countConsistentStrings(String allowed, String[] words) {
        int count = 0;
        for (int i = 0; i < words.length; i++) {
            String str = words[i];
            boolean isValid = true;
            for (int j = 0; j < str.length(); j++) {
                char ch = str.charAt(j);
                if (allowed.indexOf(ch) == -1) {
                    isValid = false;
                    break;
                }
            }
            if (isValid)
                count++;
        }
        return count;
    }
}
****************************************************************************************************************************************
                                                                     C++
class Solution {
public:
    int countConsistentStrings(string allowed, vector<string>& words) {
        int arr[26] = {0};
        for (char c : allowed) {
            arr[c - 'a'] = 1;
        }
        
        int count = 0;
        for (string word : words) {
            int flag = 1;
            for (char c : word) {
                if (arr[c - 'a'] == 0) {
                    flag = 0;
                    break;
                }
            }
            count += flag;
        }
        return count;
    }
};
****************************************************************************************************************************************

*****************************************************************************************************
                                                    SELF JAVA
class Solution {
    public int[] getConcatenation(int[] nums) {
        int n = nums.length;
        int ans[] = new int[2*n];
        for (int i=0; i<=2*n-1; i++)
        {
           if (i<n)   ans[i] = nums[i];
           else       ans[i] = nums[i-n];
        }
         return ans;
    }
}

*****************************************************************************************************
                                                    JAVA 1ms

class Solution {
    public int[] getConcatenation(int[] nums) {
        int n = nums.length;
        int ans[] = new int[2*n];
        for (int i=0; i<=n-1; i++)
        {
            ans[i] = nums[i];
            ans[i+n] = nums[i];
        }
         return ans;
    }
}

*****************************************************************************************************
                                                     C++ 0ms
class Solution {
public:
    vector<int> getConcatenation(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans(2*n);
        for (int i=0; i<=n-1; i++)
        {
            ans[i] = nums[i];
            ans[i+n] = nums[i];
        }
         return ans;
    }
};

*****************************************************************************************************

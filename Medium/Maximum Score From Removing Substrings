*************************************************************************************************************************
                                                             C++
class Solution {
public:
    int maximumGain(string s, int x, int y) {
        int score = 0;
        char ch1 = 'a', ch2 = 'b';
        int cnt1 = 0, cnt2 = 0;

        if (x < y) {
            swap(x, y);
            ch1 = 'b';
            ch2 = 'a';
        }

        for (char ch : s) {
            if (ch == ch1) {
                cnt1++;
            } else if (ch == ch2) {
                if (cnt1 > 0) {
                    cnt1--;
                    score += x;
                } else {
                    cnt2++;
                }
            } else {
                score += min(cnt1, cnt2) * y;
                cnt1 = 0;
                cnt2 = 0;
            }
        }

        if (cnt1 != 0) {
            score += min(cnt1, cnt2) * y;
        }

        return score;
    }
};
*************************************************************************************************************************
                                                             JAVA
class Solution {
    public int maximumGain(String s, int x, int y) {
        char[] chars = s.toCharArray();
        int total = 0, a = 0, b = 0;
        char first = x > y ? 'a' : 'b', second = x > y ? 'b' : 'a';
        int max = Math.max(x, y), min = Math.min(x, y);
        
        for (char c : chars) {
            if (c == first) {
                a++;
            } else if (c == second) {
                if (a > 0) {
                    a--;
                    total += max;
                } else {
                    b++;
                }
            } else {
                total += Math.min(a, b) * min;
                a = b = 0;
            }
        }
        return total + Math.min(a, b) * min;
    }
}
*************************************************************************************************************************
